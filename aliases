# aliases and functions to use across shell environments
alias ..='cd ..'  # go up one directory
alias ...='cd ../..'  # go up two directories
alias ....='cd ../../..'  # go up three directories
alias c='clear'  # clear the screen
alias ll='ls -lha'  # use long list format
alias l.='ls -d .* --color=auto'  # show hidden files
alias bc='bc -l'  # start calculator with maths support
alias df='df -H'  # human readable df by default
alias du='du -c'  # human readable du with a grand total
alias xs='eza'
alias xl='eza --long --header --group --all'
alias gst='git status'
alias gcam='git commit -am'
alias sq='squeue'
alias smk='snakemake'

# functions to count the number of files/dirs in a directory
function xc {
    eza "$@" | wc -l
}
function lc {
    ls "$@" | wc -l
}
# make a directory and then change into it
function mkcd {
    mkdir -p "$@" && cd "$@"
}
# count the number of sequences in a fast{a,q} file
function cs {
    fastaq count_sequences "$@"
}

# function that allows doing maths on the command line
function calc { printf "%s\n" "$@" | bc -l; }

# Function to go up N directories
up() {
    local n=$1
    local path=""
    for ((i=1; i<=n; i++)); do
        path+="../"
    done
    cd "$path"
}

# Aliases for convenience
alias u1='up 1'
alias u2='up 2'
alias u3='up 3'
alias u4='up 4'
alias u5='up 5'
alias u6='up 6'
alias u7='up 7'
alias u8='up 8'
alias u9='up 9'

# function to start an interactive jobs with given memory and threads
# usage: bsub_i <mem_in_gb> <threads>
bsub_i() {
    mem="${1:-1}"
    mem=$((mem * 1000))
    threads="${2:-1}"
    bsub -Is -n "$threads" -R "span[hosts=1] select[mem>${mem}] rusage[mem=${mem}]" -M"$mem" zsh
}

case "$HOSTNAME" in
    *codon*)
        bsub_gpu() {
            mem="${1:-4}"
            mem=$((mem * 1000))
            n="${2:-1}"
            bsub -gpu "num=$n" -R "select[mem>$mem] rusage[mem=$mem]" -M"$mem" -q gpu -Is zsh
        }
        ;;
    *noah* | *yoda*)
        # function to run interactive gpu job
        bsub_gpu() {
            mem="${1:-4}"
            mem=$((mem * 1000))
            bsub -gpu - -R "select[mem>$mem] rusage[mem=$mem]" -M"$mem" -P gpu -Is zsh
        }
        ;;
esac
